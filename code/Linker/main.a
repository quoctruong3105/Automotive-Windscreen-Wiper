;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;#include <alcd.h>
;
;#define ADC_VREF_TYPE 0x40
;#define noH 0b00000000
;#define noL 0b00000000
;#define slowH 0b11110100
;#define slowL 0b00011011
;#define medH 0b10011000
;#define medL 0b10010110
;#define fastH 0b00111101
;#define fastL 0b00001001
;#define hiSw PINC.1
;#define loSw PINC.2
;#define intSw PINC.3
;#define autoSw PINC.4
;#define wasSw PINC.5
;#define On 0
;#define Off 1
;
;
;unsigned int rainFall, setTimeButton;
;
;// Timer 1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 001C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001D     if(wasSw == On)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001E     {
; 0000 001F         PORTD.0 = 1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0020     }
; 0000 0021     OCR0B = 10;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0022     delay_ms(2000);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0023     OCR0B = 5;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0024 }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;// Set time for interrupt mode
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0028 {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0029     setTimeButton++;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002A     if(setTimeButton == 3)
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002B     {
; 0000 002C         setTimeButton = 0;
;PCODE: $00000027 VOL: 0
; 0000 002D     }
; 0000 002E }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;
;// Washer
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0032 {
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0033 // Place your code here
; 0000 0034 
; 0000 0035 }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;// Read Rain Sensor
;unsigned int read_adc(unsigned char adc_input)
; 0000 0039 {
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003A ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003B // Delay needed for the stabilization of the ADC input voltage
; 0000 003C delay_us(10);
;PCODE: $00000036 VOL: 0
; 0000 003D // Start the AD conversion
; 0000 003E ADCSRA|=0x40;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 003F // Wait for the AD conversion to complete
; 0000 0040 while ((ADCSRA & 0x10)==0);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0041 ADCSRA|=0x10;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0042 return ADCW;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0043 }
;PCODE: $00000046 VOL: 0
;
;void thongBaoLCD(unsigned int x)
; 0000 0046 {
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0047     if(x > 0 && x < 350)
;	x -> Y+0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0048     {
; 0000 0049         lcd_puts("RainFall: Slight");
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 004A     }
; 0000 004B     else if(x >= 350 && x < 700)
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 004C     {
; 0000 004D         lcd_puts("RainFall: Medium");
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 004E     }
; 0000 004F     else if(x >= 700)
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0050     {
; 0000 0051         lcd_puts("RainFall: Heavy");
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0052     }
; 0000 0053     else
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0054     {
; 0000 0055         lcd_puts("There's no rain");
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0056     }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0057 }
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0

	.DSEG
_0xD:
	.BYTE 0x42
;
;void washer()
; 0000 005A {

	.CSEG
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 005B     lcd_gotoxy(0,0);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 005C     lcd_puts("Washering");
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 005D     PORTD.0 = 0;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 005E     TIMSK1 = 0b00000010;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 005F     OCR1AH = fastH;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0060     OCR1AL = fastL;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0061 }
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0

	.DSEG
_0x15:
	.BYTE 0xA
;
;void modeHigh()
; 0000 0064 {

	.CSEG
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0065     lcd_clear();
;PCODE: $00000093 VOL: 0
; 0000 0066     lcd_gotoxy(0,0);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0067     while(wasSw == On)
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0068     {
; 0000 0069         washer();
;PCODE: $0000009D VOL: 0
; 0000 006A     }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 006B     lcd_puts("Mode: high");
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 006C     TIMSK1 = 0b00000010;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 006D     OCR1AH = fastH;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 006E     OCR1AL = fastL;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 006F }
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0

	.DSEG
_0x1B:
	.BYTE 0xB
;
;void modeLow()
; 0000 0072 {

	.CSEG
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0073     lcd_clear();
;PCODE: $000000AE VOL: 0
; 0000 0074     lcd_gotoxy(0,0);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0075     while(wasSw == On)
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0076     {
; 0000 0077         washer();
;PCODE: $000000B8 VOL: 0
; 0000 0078     }
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0079     lcd_puts("Mode: slow");
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 007A     TIMSK1 = 0b00000010;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 007B     OCR1AH = slowH;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 007C     OCR1AL = slowL;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 007D }
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0

	.DSEG
_0x1F:
	.BYTE 0xB
;
;void modeInterrupt()
; 0000 0080 {

	.CSEG
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0081     lcd_clear();
;PCODE: $000000C9 VOL: 0
; 0000 0082     lcd_gotoxy(0,0);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0083     while(wasSw == On)
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0084     {
; 0000 0085         washer();
;PCODE: $000000D3 VOL: 0
; 0000 0086     }
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 0087     lcd_puts("Mode: Interrupt");
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0088     lcd_gotoxy(0,1);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0089     lcd_puts("Period: ");
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 008A     TIMSK1 = 0b00000010;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 008B     if(setTimeButton == 0)
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 008C     {
; 0000 008D         lcd_puts("+");
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 008E         OCR1AH = slowH;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 008F         OCR1AL = slowL;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0090     }
; 0000 0091     else if(setTimeButton == 1)
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0092     {
; 0000 0093         lcd_puts("++");
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0094         OCR1AH = medH;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0095         OCR1AL = medL;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0096     }
; 0000 0097     else if(setTimeButton == 2)
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0098     {
; 0000 0099         lcd_puts("+++");
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 009A         OCR1AH = fastH;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 009B         OCR1AL = fastL;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 009C     }
; 0000 009D }
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0

	.DSEG
_0x23:
	.BYTE 0x22
;
;void modeAuto()
; 0000 00A0 {

	.CSEG
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00A1     lcd_clear();
;PCODE: $00000110 VOL: 0
; 0000 00A2     lcd_gotoxy(0,0);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00A3     while(wasSw == On)
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00A4     {
; 0000 00A5         washer();
;PCODE: $0000011A VOL: 0
; 0000 00A6     }
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00A7     lcd_puts("Mode: Auto");
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00A8     rainFall = read_adc(0);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00A9     lcd_gotoxy(0,1);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00AA     thongBaoLCD(rainFall);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00AB     //Allow interrup
; 0000 00AC     if(rainFall != 0) //When rain sensor receive rain sginal -> allow interrupt
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 00AD     {
; 0000 00AE         TIMSK1 = 0b00000010;
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00AF     }
; 0000 00B0     else //When there is no rain -> no interrupt -> Servo does not operate
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00B1     {
; 0000 00B2         TIMSK1 = 0b00000000;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00B3     }
;PCODE: $00000134 VOL: 0
; 0000 00B4 
; 0000 00B5     //Delay depend on ADC using Timer1
; 0000 00B6     if(rainFall > 0 && rainFall < 350) // Slight
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00B7     {
; 0000 00B8         OCR1AH = slowH;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00B9         OCR1AL = slowL;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00BA     }
; 0000 00BB     else if(rainFall >= 350 && rainFall < 700) // Medium
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00BC     {
; 0000 00BD         OCR1AH = medH;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00BE         OCR1AL = medL;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 00BF     }
; 0000 00C0     else if(rainFall >= 700) // Heavy
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00C1     {
; 0000 00C2         OCR1AH = fastH;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00C3         OCR1AL = fastL;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00C4     }
; 0000 00C5 }
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0

	.DSEG
_0x2C:
	.BYTE 0xB
;
;void off()
; 0000 00C8 {

	.CSEG
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00C9     TIMSK1 = 0b00000000;
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00CA     lcd_clear();
;PCODE: $00000164 VOL: 0
; 0000 00CB     lcd_gotoxy(0,0);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00CC }
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;
;void main(void)
; 0000 00CF {
;PCODE: $0000016C VOL: 0
; 0000 00D0 
; 0000 00D1 // Timer/Counter 0 initialization
; 0000 00D2 TCCR0A=0b00100011;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00D3 TCCR0B=0b00001101;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00D4 OCR0A=100;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00D5 OCR0B=5;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00D6 
; 0000 00D7 // Timer/Counter 1 initialization
; 0000 00D8 TCCR1A=0b00000000; // Mode CTC: TOP OCR1A
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 00D9 TCCR1B=0b00001100; // Presacle: 256 -> f: 256/8 = 32 muys
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00DA TIMSK1=0b00000000; // Interrupt will be set depend on mode
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00DB 
; 0000 00DC // ADC initialization
; 0000 00DD DIDR0=0x01;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00DE ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00DF ADCSRA=0x81;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00E0 
; 0000 00E1 // External Interrupt(s) initialization
; 0000 00E2 EICRA=0x02;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00E3 EIMSK=0x01;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00E4 EIFR=0x01;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 00E5 
; 0000 00E6 DDRD.5 = 1; // Output PWM
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00E7 DDRD.0 = 1; // Output Motor jet water
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00E8 PORTC.1 = 1; // Mode High switch
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00E9 PORTC.2 = 1; // Mode Low switch
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00EA PORTC.3 = 1; // Mode Interrupt switch
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00EB PORTC.4 = 1; // Mode Auto switch
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00EC PORTC.5 = 1; // Washer Switch
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00ED PORTD.2 = 1; // Set time for mode interrupt button
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00EE 
; 0000 00EF // Characters/line: 16
; 0000 00F0 lcd_init(16);
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00F1 
; 0000 00F2 #asm("sei")
;PCODE: $0000019A VOL: 0
	sei
;PCODE: $0000019B VOL: 0
; 0000 00F3 
; 0000 00F4 while (1)
;PCODE: $0000019C VOL: 0
; 0000 00F5       {
; 0000 00F6         if(autoSw == On && hiSw == Off && loSw == Off && intSw == Off)
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00F7         {
; 0000 00F8             modeAuto();
;PCODE: $000001AE VOL: 0
; 0000 00F9         }
; 0000 00FA         else if(hiSw == On && loSw == Off && intSw == Off && autoSw == Off)
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00FB         {
; 0000 00FC             modeHigh();
;PCODE: $000001C2 VOL: 0
; 0000 00FD         }
; 0000 00FE         else if(loSw == On && hiSw == Off && intSw == Off && autoSw == Off)
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 00FF         {
; 0000 0100             modeLow();
;PCODE: $000001D6 VOL: 0
; 0000 0101         }
; 0000 0102 
; 0000 0103         else if(intSw == On && hiSw == Off && loSw == Off && autoSw == Off)
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0104         {
; 0000 0105             modeInterrupt();
;PCODE: $000001EA VOL: 0
; 0000 0106         }
; 0000 0107         else if(wasSw == On)
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0108         {
; 0000 0109             washer();
;PCODE: $000001F0 VOL: 0
; 0000 010A         }
; 0000 010B         else
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 010C         {
; 0000 010D             off();
;PCODE: $000001F3 VOL: 0
; 0000 010E         }
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 010F         delay_ms(500);
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0110       }
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0111 }
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
